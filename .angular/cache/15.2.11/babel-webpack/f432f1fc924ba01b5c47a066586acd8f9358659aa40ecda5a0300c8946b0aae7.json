{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { AuthService } from \"../auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ProfileComponent_em_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_em_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_em_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_em_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(router, authService, cookieService) {\n      this.router = router;\n      this.authService = authService;\n      this.cookieService = cookieService;\n    }\n    ngOnInit() {\n      // this.firstName = new FormControl(this.authService.currentUser.firstName, Validators.required)\n      // this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required)\n      // this.userName = new FormControl(this.authService.currentUser.userName, Validators.required)\n      // this.password = new FormControl(this.authService.currentUser.password, Validators.required)\n      // // this.confirmPassword = new FormControl('', Validators.required)\n      //   ***************************************************\n      //   fills profile form with current user details\n      //   ***************************************************\n      this.profileForm = new FormGroup({\n        firstName: new FormControl(this.authService.currentUser.firstName, Validators.required),\n        lastName: new FormControl(this.authService.currentUser.lastName, Validators.required),\n        userName: new FormControl(this.authService.currentUser.userName, Validators.required),\n        password: new FormControl(this.authService.currentUser.password, Validators.required),\n        confirmPassword: new FormControl(this.authService.currentUser.password, Validators.required)\n      });\n    }\n    // **************************************************\n    // save profile details from profile form\n    // *************************************************\n    saveProfile(formValues) {\n      // console.log(formValues)\n      // let domain = 'localhost';\n      let path = '/';\n      let secure = true;\n      let oldDate = new Date();\n      let expiry = new Date();\n      expiry.setTime(oldDate.getTime() + 30 * 60 * 1000);\n      this.cookieService.set('currentUser', JSON.stringify(this.authService.currentUser), expiry, path, '', secure, 'None');\n      this.cookieService.set('token', JSON.stringify(this.authService.currentUser.password), expiry, path, '', secure, 'None');\n      this.authService.updateCurrentUser(formValues.firstName, formValues.lastName, formValues.userName, formValues.password);\n      this.router.navigate(['/home']);\n      window.scrollTo(0, 0);\n    }\n    cancelEdit() {\n      this.router.navigate(['/home']);\n      window.scrollTo(0, 0);\n    }\n  }\n  ProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.CookieService));\n  };\n  ProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 31,\n    vars: 6,\n    consts: [[1, \"container\", \"min-vh-100\"], [1, \"m-4\"], [1, \"col-lg-4\", \"col-xs-6\", \"m-md-5\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [4, \"ngIf\"], [\"required\", \"\", \"formControlName\", \"firstName\", \"name\", \"firstName\", \"id\", \"firstName\", \"type\", \"text\", \"placeholder\", \"First Name...\", 1, \"form-control\"], [\"for\", \"lastName\"], [\"required\", \"\", \"formControlName\", \"lastName\", \"name\", \"lastName\", \"id\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Last Name......\", 1, \"form-control\"], [\"for\", \"userName\"], [\"required\", \"\", \"formControlName\", \"userName\", \"name\", \"userName\", \"id\", \"userName\", \"type\", \"text\", \"placeholder\", \"User Name...\", 1, \"form-control\"], [\"for\", \"password\"], [\"required\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password...\", 1, \"form-control\"], [3, \"mouseenter\", \"mouseleave\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"ml-1\", 3, \"click\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.saveProfile(ctx.profileForm.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ProfileComponent_em_9_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ProfileComponent_em_14_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"User Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, ProfileComponent_em_19_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\", 12);\n        i0.ɵɵtext(23, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, ProfileComponent_em_24_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"span\", 14);\n        i0.ɵɵlistener(\"mouseenter\", function ProfileComponent_Template_span_mouseenter_26_listener() {\n          return ctx.mouseoverLogin = true;\n        })(\"mouseleave\", function ProfileComponent_Template_span_mouseleave_26_listener() {\n          return ctx.mouseoverLogin = false;\n        });\n        i0.ɵɵelementStart(27, \"button\", 15);\n        i0.ɵɵtext(28, \"Save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_29_listener() {\n          return ctx.cancelEdit();\n        });\n        i0.ɵɵtext(30, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.firstName == null ? null : ctx.firstName.invalid) && (ctx.firstName.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.lastName == null ? null : ctx.lastName.invalid) && (ctx.lastName.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userName == null ? null : ctx.userName.invalid) && (ctx.userName.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.profileForm.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"em[_ngcontent-%COMP%]{float:right;color:#e05c65;padding-left:10px}.error[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#e3c3c5}.error[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.error[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-moz-input-placeholder{color:#fff}.error[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:-moz-input-placeholder{color:#fff}.error[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:ms-input-placeholder{color:#fff}\"]\n  });\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}