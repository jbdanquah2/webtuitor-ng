{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let MentorService = /*#__PURE__*/(() => {\n  class MentorService {\n    constructor() {\n      this.url = 'https://api.github.com/users';\n    }\n    getMentors() {\n      const subject = new Subject();\n      fetch(this.url).then(function (response) {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' + response.status);\n          return;\n        }\n        // Examine the text in the response\n        response.json().then(function (data) {\n          subject.next(data);\n          subject.complete();\n          console.log('John', data);\n        });\n      }).catch(function (err) {\n        console.log('Fetch Error :-S', err);\n      });\n      return subject;\n    }\n    getMentor(username) {\n      const subject = new Subject();\n      console.log('heer: ' + username + ' love');\n      fetch(`${this.url}/${username}`).then(function (response) {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' + response.status);\n          return;\n        }\n        // Examine the text in the response\n        response.json().then(function (data) {\n          subject.next(data);\n          subject.complete();\n          // console.log('Johnny boy',data);\n          // return data\n        });\n      }).catch(function (err) {\n        console.log('Fetch Error :-S', err);\n      });\n      return subject;\n      // return Mentors.find(mentor => mentor.id == id)\n    }\n    static #_ = this.ɵfac = function MentorService_Factory(t) {\n      return new (t || MentorService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MentorService,\n      factory: MentorService.ɵfac\n    });\n  }\n  return MentorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}