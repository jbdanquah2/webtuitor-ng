{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { AuthService } from \"../auth.service\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction LoginComponent_em_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_em_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(route, authservice, cookieService) {\n      this.route = route;\n      this.authservice = authservice;\n      this.cookieService = cookieService;\n    }\n\n    login(formValues) {\n      let domain = 'localhost';\n      let path = '/';\n      let secure = true;\n      let oldDate = new Date();\n      let expiry = new Date();\n      expiry.setTime(oldDate.getTime() + 30 * 60 * 1000); // expiry.setDate(expiry.getDate() + 1);\n\n      this.authservice.loginUser(formValues.userName, formValues.password);\n      this.cookieService.set('currentUser', JSON.stringify(this.authservice.currentUser), expiry, path, domain, secure, 'None');\n      this.cookieService.set('token', JSON.stringify(this.authservice.currentUser.password), expiry, path, domain, secure, 'None');\n      this.route.navigate(['/home']);\n    }\n\n    cancel() {\n      this.route.navigate(['/home']);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.CookieService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[1, \"container\", \"min-vh-100\"], [1, \"m-4\"], [1, \"col-lg-4\", \"col-xs-6\", \"m-md-5\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userName\"], [4, \"ngIf\"], [\"required\", \"\", \"name\", \"userName\", \"id\", \"userName\", \"type\", \"text\", \"placeholder\", \"User Name...\", 1, \"form-control\", 3, \"ngModel\"], [\"for\", \"password\"], [\"required\", \"\", \"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password...\", 1, \"form-control\", 3, \"ngModel\"], [3, \"mouseenter\", \"mouseleave\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"ml-1\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return i0.ɵɵresetView(ctx.login(_r0.value));\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"User Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginComponent_em_10_Template, 2, 0, \"em\", 7);\n        i0.ɵɵelementStart(11, \"input\", 8);\n        i0.ɵɵlistener(\"ngModel\", function LoginComponent_Template_input_ngModel_11_listener() {\n          return ctx.userName;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LoginComponent_em_15_Template, 2, 0, \"em\", 7);\n        i0.ɵɵelementStart(16, \"input\", 10);\n        i0.ɵɵlistener(\"ngModel\", function LoginComponent_Template_input_ngModel_16_listener() {\n          return ctx.password;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"span\", 11);\n        i0.ɵɵlistener(\"mouseenter\", function LoginComponent_Template_span_mouseenter_17_listener() {\n          return ctx.mouseoverLogin = true;\n        })(\"mouseleave\", function LoginComponent_Template_span_mouseleave_17_listener() {\n          return ctx.mouseoverLogin = false;\n        });\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(21, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", (_r0.controls.userName == null ? null : _r0.controls.userName.invalid) && (_r0.controls.userName.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (_r0.controls.password == null ? null : _r0.controls.password.invalid) && (_r0.controls.password.touched || ctx.mouseoverLogin));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"em[_ngcontent-%COMP%]{color:#da0f0f;float:right}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}